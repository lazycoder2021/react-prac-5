{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","catch","error","location","runtime","NotFound","App","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36cb1bef.chunk.js","sourcesContent":["import React from 'react'; \r\nimport { Link } from 'react-router-dom'; \r\nimport './Header.css'; \r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n              <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\r\n              </Link>\r\n                    <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n             </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header; \r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1cb5ea36e253b9bdf3095c3559c3bcef';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react'; \r\nimport './HeroImage.css'; \r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className='rmdb-heroimage' style={{ background: `linear-gradient(to bottom, rgba(0,0,0,0) 39%, rgba(0,0,0,0) 41%, rgba(0,0,0,0.65) 100%), url('${props.image}'), #1c1c1c` }}>\r\n            HeroImage\r\n       \r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                 </div>\r\n             </div>\r\n\r\n        </div>\r\n        \r\n     )\r\n\r\n}\r\n\r\nexport default HeroImage; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { Component } from 'react'; \r\nimport FontAwesome from 'react-fontawesome'; \r\nimport './SearchBar.css'\r\n\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: '' \r\n    }\r\n\r\n    timeout = null; \r\n\r\n    doSearch = (event) => {\r\n        this.setState({ value: event.target.value })\r\n        clearTimeout(this.timeout)\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value);\r\n        }, 500); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-search-bar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input type=\"text\" className=\"rmdb-searchbar-input\" placeholder=\"Search\" onChange={this.doSearch} value={this.state.value} />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default SearchBar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map((element, i) => {\r\n            return(\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                  {element}\r\n                </div>\r\n             )\r\n        })\r\n        return gridElements; \r\n    }\r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n               { renderElements() }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FourColGrid;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'; \r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n            {props.clickable ?\r\n                <Link to={{ pathname: `${props.movieId}`, movieName: `${props.movieName}`}}>\r\n                    <img src={props.image} alt=\"moviethumb\" />\r\n                </Link>\r\n                :\r\n                <img src={props.image} alt=\"moviethumb\" />\r\n            } \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MovieThumb;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n// JavaScript source code\r\n","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick} >\r\n            <p>{props.text}</p>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default LoadMoreBtn;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n// JavaScript source code\r\n// JavaScript source code\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            \r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Spinner;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n// JavaScript source code\r\n// JavaScript source code\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config'; \r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner'; \r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        movies: [], \r\n        heroImage: null, \r\n        loading: false, \r\n        currentPage: 0,  \r\n        totalPages: 0, \r\n        searchTerm: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true }); \r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`; \r\n        this.fetchItems(endpoint); \r\n    }\r\n\r\n    searchItems = (searchTerm) => {\r\n        console.log(searchTerm); \r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [], \r\n            loading: true,\r\n            searchTerm: searchTerm\r\n        })\r\n\r\n        if (searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`; \r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true }); \r\n\r\n        if (this.state.searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint); \r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                //console.log(result); \r\n                this.setState({\r\n                    movies: [...this.state.movies, ...result.results],\r\n                    heroImage: this.state.heroImage || result.results[0], // ternary operator short-handed to singe value or like condition statement\r\n                    loading: false,\r\n                    currentPage: result.page,\r\n                    totalPages: result.total_pages\r\n                })\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n                {this.state.heroImage ?\r\n                    <div>\r\n                        <HeroImage image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`} title={this.state.heroImage.original_title} text={this.state.heroImage.overview} />\r\n                        <SearchBar callback={this.searchItems} />\r\n                    </div> : null}\r\n                <div className=\"rmdb-home-grid\">\r\n                    <FourColGrid\r\n                        header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                        loading={this.state.loading}\r\n                    >\r\n                        {this.state.movies.map((element, i) => {\r\n                            return <MovieThumb\r\n                                        key={i}\r\n                                        clickable={true}\r\n                                        image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                        movieId={element.id}\r\n                                        movieName={element.original_title}\r\n                                   />\r\n                        })}\r\n                    </FourColGrid>\r\n                    {this.state.loading ? <Spinner /> : null}\r\n                    {(this.state.currentPage <= this.state.totalPages && !this.state.loading) ? <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> : null }\r\n                </div> \r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home; \r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\nimport { Link } from 'react-router-dom'; \r\nimport './Navigation.css'; \r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n        \r\n     )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Navigation; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config'; \r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb'; \r\nimport './MovieInfo.css'; \r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\" style={{ background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000' }}>\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb\r\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                        clickable={false}\r\n                     />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                    </div>\r\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                    {props.directors.map((element, i) => {\r\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                    })}\r\n                </div>\r\n                <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n            </div>\r\n        </div>\r\n     )\r\n\r\n}\r\n\r\nexport default MovieInfo; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react'; \r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js'; \r\nimport './MovieInfoBar.css'; \r\n\r\n\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n     )\r\n\r\n}\r\n\r\nexport default MovieInfoBar; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config'; \r\nimport './Actor.css'; \r\n\r\nconst Actor = (props) => {\r\n    const POSTER_SIZE = \"w154\"; \r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : '/images/no_image.jpg'}\r\n                 alt=\"actorthumb\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Actor; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { Component } from 'react'; \r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner'; \r\nimport './Movie.css'; \r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true })\r\n        //first fetch the movie \r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                if (result.status_code) {\r\n                    this.setState({ loading: false });\r\n                } else {\r\n                    this.setState({ movie: result }, () => {\r\n                        // fetch actors only when state of movie is set to result array....\r\n                        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n                        fetch(endpoint)\r\n                            .then(result => result.json())\r\n                            .then(result => {\r\n                                const directors = result.crew.filter((member) => member.job === \"Director\");\r\n\r\n                                this.setState({\r\n                                    actors: result.cast,\r\n                                    directors: directors,\r\n                                    loading: false\r\n                                })\r\n\r\n                            })\r\n                    })\r\n                }\r\n            })\r\n\r\n            .catch(error => console.error('Error:', error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ?\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName} />\r\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                    </div>\r\n                    : null}\r\n                {this.state.actors ?\r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>\r\n                            {this.state.actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </FourColGrid>\r\n                    </div>\r\n                    : null}\r\n\r\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n                {this.state.loading ? <Spinner/>: null}\r\n\r\n         }\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Movie; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Whooops! This page doesn't exist</h1>\r\n        </div>\r\n     )\r\n\r\n}\r\n\r\nexport default NotFound; \r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; \r\nimport Header from '../elements/Header/Header'; \r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie'; \r\nimport NotFound from '../elements/NotFound/NotFound'; \r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n        )\r\n}\r\n\r\nexport default App; \r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App'\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}